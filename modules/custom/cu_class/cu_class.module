<?php
/**
 * @file
 * Code for the CU Block Layout feature.
 */

/**
 * Implements hook_entity_info().
 */
function cu_class_entity_info() {
  $info = array();

  $info['cu_class'] = array(
    'label' => t('Class'),
    'entity class' => 'Entity',
    'controller class' => 'EntityAPIController',
    'base table' => 'cu_class',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'class_id',
      'title' => 'title',
      'bundle' => 'type',
    ),
    'module' => 'cu_class',
    // Attach bundles - i.e. alternative configurations of fields associated with a main entity.
    'bundles' => array(
      'class' => array(
        'label' => 'Class',
         // Information below is used by the Field UI - they "attach" themselves here and lets us
         // do the standard field management that all the core entities enjoy.
         'admin' => array(
           'path' => 'admin/structure/class/manage',
            'access arguments' => array('administer class content'),
          ),
        ),
      ),
      'uri callback' => 'entity_class_uri',
      'load hook' => 'cu_class_load',
      'view modes' => array(
        'full' => array(
          'label' => t('Default'),
          'custom settings' => FALSE,
        ),
        'short' => array(
          'label' => t('Short'),
          'custom settings' => FALSE,
        ),
        'list' => array(
          'label' => t('List'),
          'custom settings' => FALSE,
        ),
      ),
  );

  return $info;
}
/**
 * Implements hook_entity_info_alter().
 */
function cu_class_entity_info_alter(&$entity_info) {

}

/**
 * Implements hook_flush_caches().
 */
function cu_class_flush_caches() {
  return array('cache_class');
}

/**
 * Implements hook_ctools_plugin_api().
 */
function cu_class_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "context" && $api == "context") {
    return array("version" => "3");
  }
}

/**
 * Implements hook_views_api().
 */
function cu_class_views_api($module = NULL, $api = NULL) {
  return array("api" => "3.0");
}


/**
 * Implements hook_menu().
 */
function cu_class_menu() {
  // Add Class
  $items['class/add'] = array(
    'title' => 'Add Class',
    'page callback' => 'cu_class_add',
    'access callback' => 'cu_class_access',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );

  $class_uri = 'class/%cu_class';
  $class_uri_argument_position = 1;

  $items[$class_uri] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('cu_class', $class_uri_argument_position),
    'page callback' => 'cu_class_view',
    'page arguments' => array($class_uri_argument_position),
    'access callback' => 'cu_class_access',
    'file' => 'cu_class.pages.inc',
  );

  $items[$class_uri . '/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items[$class_uri . '/delete'] = array(
    'title' => 'Delete',
    'title callback' => 'cu_class_label',
    'title arguments' => array($class_uri_argument_position),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_class_delete_form', $class_uri_argument_position),
    'access callback' => cu_class_access,
    'file' => 'cu_class.admin.inc',
  );

  $items[$class_uri . '/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_class_form', $class_uri_argument_position),
    'access callback' => 'cu_class_access',
    'file' => 'cu_class.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  // Layout settings
  $items['admin/config/content/class'] = array(
    'title' => 'Classes Import Settings',
    'description' => 'Configure Class settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_class_settings_form'),
    'access arguments' => array('administer classes'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'cu_class.admin.inc',
  );

   // This provides a place for Field API to hang its own
  // interface and has to be the same as what was defined
  // in class_entity_info() above.
  $items['admin/structure/class/manage'] = array(
    'title' => 'Class',
    'description' => 'Manage Class Entity Structure',
    'page callback' => 'cu_class_admin_page',
    'access arguments' => array('administer class content'),
    'weight' => -50,
  );

  return $items;
}

/**
 * Access callback for ???
 */
function cu_class_access() {
  // switch to a custom permission?
  return TRUE;
}

/**
 * Implements hook_permission().
 */
function cu_class_permission() {
  return array(
    'administer class content' => array(
      'title' => 'Administer Class Content',
      'description' => 'Configure import settings',
    ),
    'import classes' => array(
      'title' => 'Import Class Content',
      'description' => 'Allows user to find a specific class or group of classes to import',
    ),
    'override class fields' => array(
      'title' => 'Override Class Fields',
      'description' => 'Modify fields added to Class entity',
    ),
    'view unpublished classes' => array(
      'title' => 'View Unpublished Class Content',
      'description' => '',
    ),
  );
}



/**
 * Implements hook_entity_view().
 */
function cu_class_entity_view($entity, $type, $view_mode) {
  if ($type == 'cu_class') {
    // alter it here
  }
}


/**
 * Creates an class entity for us - simply intializing the main variables and
 * sending us to a form to add in the rest.
 */
function cu_class_add() {

  $class = entity_create('cu_class', array('type' => 'class'));

  return drupal_get_form('cu_class_form', $class);
}

/**
 * Class Form.
 */
function cu_class_form($form, &$form_state, $class) {

  $form_state['class'] = $class;

  field_attach_form('cu_class', $class, $form, $form_state);

  $submit = array();
  if (!empty($form['#submit'])) {
    $submit += $form['#submit'];
  }

  $form['actions'] = array(
    '#weight' => 100,
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save class'),
    '#submit' => $submit + array('cu_class_form_submit'),
  );

  return $form;
}

/**
 * Class submit handler.
 */
function cu_class_form_submit($form, &$form_state) {
  $class = $form_state['class'];

  entity_form_submit_build_entity('cu_class', $class, $form, $form_state);

  entity_save('cu_class', $class);

  $class_uri = entity_uri('cu_class', $class);
  dsm($class_uri);
  $form_state['redirect'] = $class_uri['path'];

  drupal_set_message(t('Class %title saved.', array('%title' => entity_label('cu_class', $class))));
}

/**
 * Just provide some airing info for the entity administration page.
 * This can be expanded to add more information / a list of all created entites, etc.
 */
function cu_class_admin_page() {
  //$output = 'Welcome to the administration page for your Airing Entities.<br/>';
  //$output .= '<ul class="action-links"><li><a href="/airing/add">Add Airing</a></li></ul>';
  //return $output;

  // Not sure why we'd need an admin landing page, so I'm redirecting to field

  drupal_goto('admin/structure/class/manage/fields');
}

/**
 * Load a class.
 */
function cu_class_load($class_id, $reset = FALSE) {
  $classes = cu_class_load_multiple(array($class_id), array(), $reset);
  //dsm($classes);
  return reset($classes);
}

/**
 * Load multiple classes based on certain conditions.
 */
function cu_class_load_multiple($class_ids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('cu_class', $class_ids, $conditions, $reset);
}

/**
 * Implements hook_theme_registry_alter().
 */
function cu_class_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'cu_class');
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'cu_class', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('cu_class');
  foreach ($hooks as $h) {
    if (isset($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      array_unshift($theme_registry[$h]['theme paths'], array_shift($theme_registry[$h]['theme paths']), $module_path);
    }
  }
}

function cu_class_preprocess_entity(&$vars) {
  $entity_type = $vars['elements']['#entity_type'];
  $bundle = $vars['elements']['#bundle'];
  if (($entity_type == 'cu_class') && ($bundle == 'class')) {
    if ($vars['view_mode'] == 'short') {
      $vars['theme_hook_suggestions'][] = 'cu_class__short';
    }
    if ($vars['view_mode'] == 'list') {
      $vars['theme_hook_suggestions'][] = 'cu_class__list';
    }
    $title = array();
    $title[] = $vars['content']['field_class_subject'][0]['#markup'];
    $title[] = $vars['content']['field_class_catalog_nbr'][0]['#markup'];
    $title[] = '<span class="class-title">' . $vars['content']['field_class_course_title_long'][0]['#markup'] . '</span>';

    $course_link_title = $vars['content']['field_class_course_title_long'][0]['#markup'] . ' - Section ' .  $vars['content']['field_class_class_section'][0]['#markup'];
    $vars['course_link'] = l($course_link_title, 'course/' . $vars['content']['field_class_crse_id'][0]['#markup'], array('query' => array('class_id' => $vars['content']['field_class_class_nbr'][0]['#markup'])));

    // Dates
    $vars['start_date'] = format_date(strtotime($vars['content']['field_class_start_dt']['#items'][0]['value']), 'cu_medium_date');
    $vars['end_date'] = format_date(strtotime($vars['content']['field_class_end_dt']['#items'][0]['value']), 'cu_medium_date');
    $vars['updated'] = 'Updated: ' . format_date(strtotime($vars['content']['field_class_last_updated']['#items'][0]['value']), 'cu_short_date');

    // Available seats
    $cap = intval($vars['content']['field_class_enrl_cap'][0]['#markup']);
    $total = intval($vars['content']['field_class_enrl_tot'][0]['#markup']);
    $available = $cap - $total;
    if ($available == 1) {
      $vars['available'] = $available . ' seat available';
    } else {
      $vars['available'] = $available . ' seats available';
    }
    if ($vars['content']['field_class_crse_attr'][0]['#markup'] == 'BCRQ') {
      $reqs = $vars['content']['field_class_crse_attr_value'][0]['#markup'];
      $vars['course_requirements'] = cu_class_core_requirements($reqs);
    }
    else {
      $vars['course_requirements'] = '';
    }
    $mode = $vars['content']['field_class_instruction_mode'][0]['#markup'];
    $vars['format'] = cu_class_format_translate($mode);

    $session = $vars['content']['field_class_session_code'][0]['#markup'];
    $vars['session'] = cu_class_session_translator($session);
  }
}

function cu_class_page_alter(&$page) {
  drupal_add_css(drupal_get_path('module', 'cu_class') . '/css/cu-class.css');
}

function cu_class_core_requirements($reqs) {
  $keys = explode(' ', $reqs);
  $requirements = array(
    'AD' => 'Human Diversity',
    'AF' => 'Foreign Language',
    'AH' => 'Historical Context',
    'AI' => 'Ideals & Values',
    'AL' => 'Literature and the Arts',
    'AM' => 'MAPS Course',
    'AQ' => 'Quantitative Reasoning & Mathmatical Skills',
    'AS' => 'Contemporary Societies',
    'AU' => 'United States Context',
    'AW' => 'Written Communication',
    'AX' => 'Natural Sciences Sequence',
    'AY' => 'Natural Sciences Non-sequence',
    'AZ' => 'Natural Sciences Lab',
  );
  $values = array();
  foreach ($keys as $key) {
    if (isset($requirements[$key])) {
      $values[] = $requirements[$key];
    }
  }
  return join(', ', $values);
}

function cu_class_core_requirements_values() {
  $requirements = array(
    'AD' => 'Human Diversity',
    'AF' => 'Foreign Language',
    'AH' => 'Historical Context',
    'AI' => 'Ideals & Values',
    'AL' => 'Literature and the Arts',
    'AM' => 'MAPS Course',
    'AQ' => 'QUant Rsn & Mathmat Skills',
    'AS' => 'Contemporary Societies',
    'AU' => 'United States Context',
    'AW' => 'Written Communication',
    'AX' => 'Natural Sciences Sequence',
    'AY' => 'Natural Sciences Non-sequence',
    'AZ' => 'Natural Sciences Lab',
  );
  asort($requirements);
  return $requirements;
}

function cu_class_subject_values() {
  $subjects = array(
    'AREN' => 'Architecture Engineering, Engineering & Applied Sciences',
    'GEOG' => 'Geography, Arts & Sciences',
    'PHIL' => 'Philosophy, Arts & Sciences',
    'HIST' => 'History, Arts & Sciences',
    'JRNL' => 'Journalism, Media, Communication and Information',
    'IAFS' => 'International Affairs, Arts & Sciences',
    'HUMN' => 'Humanities, Arts & Sciences',
    'ENGL' => 'English, Arts & Sciences',
    'ECON' => 'Economics, Arts & Sciences',
    'JPNS' => 'Japanese , Arts & Sciences',
    'ANTH' => 'Anthropology, Arts & Sciences',
    'LEAD' => 'Leadership, Education',
    'ETHN' => 'Ethnic Studies',
    'MUEL' => 'Music, Music',
    'EDUC' => 'Education, Education',
    'LAWS' => 'Law, Law',
    'CLAS' => 'Classics, Arts & Sciences',
    'DNCE' => 'Dance, Arts & Sciences',
    'THTR' => 'Theater, Arts & Sciences',
    'ATOC' => 'Atmospheric & Oceanic Sciences, Arts & Sciences',
    'PSYC' => 'Psychology & Neuroscience, Arts & Sciences',
    'FREN' => 'French, Arts & Sciences',
    'RUSS' => 'Russian, Arts & Sciences',
    'EBIO' => 'Ecology & Evolutionary Biology, Arts & Sciences',
    'PHYS' => 'Physics, Arts & Sciences',
    'MCEN' => 'Mechanical Engineering, Engineering & Applied Sciences',
    'CVEN' => 'Civil Engineering, Engineering & Applied Sciences',
    'ENVD' => 'Environmental Design, Program in Environmental Design',
    'CSCI' => 'Computer Sciences, Engineering & Applied Sciences',
    'SPAN' => 'Spanish, Arts & Sciences',
    'ACCT' => 'Accounting, Business',
    'ANTH' => 'Anthropology, Arts & Sciences',
    'APPM' => 'Applied Mathematics, Arts & Sciences',
    'APRD' => 'Advertising, Public Relations and Media Design, Media, Communication and Information',
    'AREN' => 'Architecture Engineering, Engineering & Applied Sciences',
    'ARTF' => 'Art & Art History-Film, Arts & Sciences',
    'ARTH' => 'Art History, Arts & Sciences',
    'ARTS' => 'Art-Studio, Arts & Sciences',
    'ASEN' => 'Aerospace Engineering Sciences, Engineering & Applied Sciences',
    'ASIA' => 'Asian Studies, Arts & Sciences',
    'ASTR' => 'Astrophysical & Planetary Sciences, Arts & Sciences',
    'ATLS' => 'ATLAS, Engineering & Applied Sciences',
    'ATOC' => 'Atmospheric & Oceanic Sciences, Arts & Sciences',
    'BADM' => 'Business Administration, Business',
    'BCOR' => 'Business Core, Business',
    'BPOL' => 'Business Policy & Strategic Management, Business',
    'CESR' => 'Current Emphasis on Social Responsibility, Business',
    'CHEM' => 'Chemistry & Biochemistry, Arts & Sciences',
    'CHEN' => 'Chemistry & Biochemistry, Arts & Sciences',
    'CLAS' => 'Classics, Arts & Sciences',
    'CMDP' => 'Critical Media Practices, Media, Communication & Information',
    'COEN' => 'Engineering & Applied Science Administration',
    'COML' => 'Comparative Literature, Arts & Sciences',
    'COMM' => 'Communications, Media, Communication & Information',
    'CSCI' => 'Computer Science, Engineering & Applied Science',
    'CVEN' => 'Civil, Environmental & Architectural Engineering',
    'DNCE' => 'Dance, Arts & Sciences',
    'EBIO' => 'Ecology & Evolutionary Biology, Arts & Sciences',
    'ECEN' => 'Electrical, Computer & Energy Engineering, Engineering & Applied Sciences',
    'ECON' => 'Economics, Arts & Sciences',
    'EDUC' => 'Education, Education',
    'EMEN' => 'Engineering Management, Engineering & Applied Sciences',
    'ENGL' => 'English, Arts & Sciences',
    'ENVD' => 'Environmental Design, Program in Environmental Design',
    'ENVS' => 'Environmental Studies, Arts & Sciences',
    'ESBM' => 'Entrepreneurship & Small Business, Business',
    'ETHN' => 'Ethnic Studies, Arts & Sciences',
    'FILM' => 'Film Studies, Arts & Sciences',
    'FNCE' => 'Finance, Business',
    'FREN' => 'French, Arts & Sciences',
    'GEEN' => 'General Engineering, Engineering & Applied Sciences',
    'GEOG' => 'Geography, Arts & Sciences',
    'GEOL' => 'Geological Sciences, Arts & Sciences',
    'GRMN' => 'Germanic & Slavic Language & Lit, Arts & Sciences',
    'HIST' => 'History, Arts & Sciences',
    'HONR' => 'Honors, Arts & Sciences',
    'HUEN' => 'Humanities for Engineers, Engineering & Applied Sciences',
    'HUMN' => 'Humanities, Arts & Sciences',
    'IAFS' => 'International Affairs, Arts & Sciences',
    'INBU' => 'International Business, Business',
    'IPHY' => 'Integrative Physiology, Arts & Sciences',
    'ITAL' => 'Italian, Arts & Sciences',
    'JPNS' => 'Japanese, Arts & Sciences',
    'JRNL' => 'Journalism, Media, Communication and Information',
    'JWST' => 'Jewish Studies, Arts & Sciences',
    'KREN' => 'Korean, Arts & Sciences',
    'LATN' => 'Latin, Arts & Sciences',
    'LAWS' => 'Law, Law',
    'LDSP' => 'Leadership Residential Academic Program, Cross College Program',
    'LEAD' => 'CU Engage, Education',
    'LING' => 'Linguistics, Arts & Sciences',
    'MATH' => 'Mathematics, Arts & Sciences',
    'MCDB' => 'Molecular and Cellular and Developmental Biology, Arts & Sciences ',
    'MCEN' => 'Mechanical Engineering, Engineering & Applied Sciences',
    'MDST' => 'Media Studies, Media, Communication & Information',
    'MGMT' => 'Management, Media, Communication & Information',
    'MKTG' => 'Marketing, Business',
    'MUEL' => 'Music, Music',
    'MUSC' => 'Music, Music',
    'MUSM' => 'Museum Studies, Arts & Sciences',
    'NRSC' => 'Psychology & Neuroscience, Arts & Sciences',
    'PHIL' => 'Philosophy, Arts & Sciences',
    'PHYS' => 'Physics, Arts & Sciences',
    'PRLC' => ' Presidents Leadership Class, Cross College Program',
    'PSCI' => 'Political Science, Arts & Sciences',
    'PSYC' => 'Psychology, Arts & Sciences',
    'REAL' => 'Real Estate, Business',
    'RLST' => 'Religious Studies, Arts & Sciences',
    'RUSS' => 'Russian, Arts & Sciences',
    'SCAN' => ' Nordic, Arts & Sciences',
    'SLHS' => 'Speech, Language and Hearing Sciences, Arts & Sciences',
    'SOCY' => 'Sociology, Arts & Sciences',
    'SPAN' => 'Spanish, Arts & Sciences',
    'THTR' => 'Theater, Arts & Sciences',
    'TLEN' => 'Telecommunication, Engineering & Applied Sciences',
    'TMUS' => 'Thesis Music, Music',
    'WMST' => 'Womens Studies, Arts & Sciences',
    'WRTG' => 'Writing & Rhetoric, Arts & Sciences',
  );
  asort($subjects);
  return $subjects;
}

function cu_class_format_translate($format) {
  $formats = cu_class_format_values();
  if (isset($formats[$format])) {
    return $formats[$format];
  }
}

function cu_class_format_values() {
  $formats = array(
    'CD' => 'Candidate degree',
    'CN' => 'CU Net',
    'CO' => 'Correspondence',
    'DL' => 'Distance Learning',
    'HY' => 'Hybrid',
    'IS' => 'Independent study',
    'OL' => 'Online',
    'OS' => 'Online, self-paced',
    'OT' => 'Online, term-based',
    'P' => 'In Person',
    'Temp-oc' => 'Online Completion',
    'TV' => 'Television',
  );
  asort($formats);
  return $formats;
}

function cu_class_session_translator($session) {
  $sessions = array(
    'BCS'	=> 'Boulder C Session/8 Weeks',
    'BAS'	=> 'Boulder A Session/1st 5 Weeks',
    'BAM'	=> 'Boulder Maymester/3 Weeks',
    'BBS'	=> 'Boulder B Session/2nd 5 Weeks',
    'BD1'	=> 'Boulder D Session/10 Weeks',
    'BGS'	=> 'Boulder Augmester/3 Weeks',
    'BS2'	=> 'Boulder Campus - 2nd 6 weeks',
    'BS1'	=> 'Boulder Campus - 1st 6 weeks',
    'BES'	=> 'Boulder E Session/1st 5 Weeks',
    'BD2'	=> 'Boulder D (w/B Drop/Add Dates)',
    'BFS'	=> 'Boulder F Session/2nd 5 Weeks',
  );
  if (isset($sessions[$session])) {
    return $sessions[$session];
  }
}
